---
- name: Deploy Rails Application
  hosts: all
  become: yes
  vars:
    app_user: "deploy"
    app_path: "/var/www/hello-world-app"
    rails_env: "staging1"
    
  tasks:
    - name: Display deployment information
      debug:
        msg: |
          Deploying to: {{ inventory_hostname }}
          Rails Environment: {{ rails_env }}
          Branch: {{ branch_name }}
          App Path: {{ app_path }}
          Git Repo: {{ git_repo_url }}
          
    - name: Ensure application directory exists
      file:
        path: "{{ app_path }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
    
    # ✅ SIMPLE: Just deploy/update the code - no complex checks
    - name: Deploy latest code from repository
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ app_path }}"
        version: "{{ branch_name }}"
        force: yes
        update: yes
      become_user: "{{ app_user }}"
      register: git_result

    # - name: Display deployment result
    #   debug:
    #     msg: "Code deployment completed. Changed: {{ git_result.changed }}"

    # # ✅ Install dependencies if Gemfile exists
    # - name: Install Ruby gems
    #   shell: "bundle install --deployment --without development test"
    #   args:
    #     chdir: "{{ app_path }}"
    #   become_user: "{{ app_user }}"
    #   environment:
    #     RAILS_ENV: "{{ rails_env }}"
    #   ignore_errors: yes
    #   register: bundle_result
      
    # - name: Display bundle install result
    #   debug:
    #     msg: "Bundle install completed: {{ bundle_result.changed | default('failed') }}"
    
    # # ✅ Run Rails tasks if it's a Rails app
    - name: Run database migrations
      shell: "RAILS_ENV={{ rails_env }} bundle exec rake db:migrate"
      args:
        chdir: "{{ app_path }}"
      become_user: "{{ app_user }}"
      ignore_errors: yes
      register: migration_result
      
    - name: Display migration result
      debug:
        msg: "Database migration completed: {{ migration_result.changed | default('failed') }}"
    
    - name: Precompile assets
      shell: "RAILS_ENV={{ rails_env }} bundle exec rake assets:precompile"
      args:
        chdir: "{{ app_path }}"
      become_user: "{{ app_user }}"
      ignore_errors: yes
      register: assets_result
      
    - name: Display assets compilation result
      debug:
        msg: "Assets precompilation completed: {{ assets_result.changed | default('failed') }}"
    
    - name: Set proper permissions
      file:
        path: "{{ app_path }}"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        recurse: yes
    
    - name: Restart Apache service
      service:
        name: apache2
        state: restarted
      ignore_errors: yes
      register: apache_result

    - name: Display Apache restart result
      debug:
        msg: "Apache restart completed: {{ apache_result.changed | default('failed') }}"
  
  handlers:
    - name: check apache status
      service:
        name: apache2
        state: started