---
- name: Deploy Rails Application
  hosts: all
  become: yes
  vars:
    app_user: "deploy"
    app_path: "/var/www/hello-world-app"
    # rails_env will be passed from Jenkins as extra-vars
    
  tasks:
    - name: Display deployment information
      debug:
        msg: |
          üöÄ DEPLOYMENT STARTING üöÄ
          Deploying to: {{ inventory_hostname }}
          Rails Environment: {{ rails_env }}
          Branch: {{ branch_name }}
          App Path: {{ app_path }}
          Git Repo: {{ git_repo_url }}
          Deploy Type: {{ deploy_type | default('UNKNOWN') }}
          
    - name: Check if application directory exists
      stat:
        path: "{{ app_path }}"
      register: app_dir

    - name: Ensure application directory exists
      file:
        path: "{{ app_path }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
      when: not app_dir.stat.exists
    
    - name: Pull latest code from repository
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ app_path }}"
        version: "{{ branch_name }}"
        force: yes
        update: yes
      become_user: "{{ app_user }}"
      register: git_result

    - name: Display deployment result
      debug:
        msg: |
          ‚úÖ Code deployment completed
          Changed: {{ git_result.changed }}
          {% if git_result.changed %}
          Before: {{ git_result.before | default('N/A') }}
          After: {{ git_result.after | default('N/A') }}
          {% else %}
          No changes detected - already up to date
          {% endif %}
    
    - name: Run database migrations (if needed)
      shell: "RAILS_ENV={{ rails_env }} bundle exec rake db:migrate"
      args:
        chdir: "{{ app_path }}"
      become_user: "{{ app_user }}"
      ignore_errors: yes
      register: migration_result
      when: git_result.changed
      
    - name: Display migration result
      debug:
        msg: |
          üóÉÔ∏è Database migrations: 
          {% if git_result.changed %}
          Status: {{ 'SUCCESS' if migration_result.rc == 0 else 'FAILED' }}
          {% else %}
          SKIPPED - No code changes detected
          {% endif %}
    
    - name: Precompile assets (if code changed)
      shell: "RAILS_ENV={{ rails_env }} bundle exec rake assets:precompile"
      args:
        chdir: "{{ app_path }}"
      become_user: "{{ app_user }}"
      ignore_errors: yes
      register: assets_result
      when: git_result.changed
      
    - name: Display assets compilation result
      debug:
        msg: |
          üé® Assets precompilation: 
          {% if git_result.changed %}
          Status: {{ 'SUCCESS' if assets_result.rc == 0 else 'FAILED' }}
          {% else %}
          SKIPPED - No code changes detected
          {% endif %}
    
    - name: Set proper permissions
      file:
        path: "{{ app_path }}"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        recurse: yes
      when: git_result.changed
    
    - name: Restart Apache service (if code changed)
      service:
        name: apache2
        state: restarted
      ignore_errors: yes
      register: apache_result
      when: git_result.changed

    - name: Display Apache restart result
      debug:
        msg: |
          üåê Apache service: 
          {% if git_result.changed %}
          Status: {{ 'RESTARTED' if apache_result.changed else 'FAILED TO RESTART' }}
          {% else %}
          SKIPPED - No code changes detected
          {% endif %}

    - name: Deployment Summary
      debug:
        msg: |
          üéâ DEPLOYMENT COMPLETED üéâ
          Server: {{ inventory_hostname }}
          Environment: {{ rails_env }}
          Branch: {{ branch_name }}
          Deploy Type: {{ deploy_type | default('UNKNOWN') }}
          Git Status: {% if git_result.changed %}NEW CHANGES DEPLOYED{% else %}NO CHANGES - UP TO DATE{% endif %}
          Migration Status: {% if git_result.changed %}{{ 'SUCCESS' if migration_result.rc == 0 else 'FAILED' }}{% else %}SKIPPED{% endif %}
          Assets Status: {% if git_result.changed %}{{ 'SUCCESS' if assets_result.rc == 0 else 'FAILED' }}{% else %}SKIPPED{% endif %}
          Apache Status: {% if git_result.changed %}{{ 'RESTARTED' if apache_result.changed else 'FAILED' }}{% else %}SKIPPED{% endif %}
  
  handlers:
    - name: check apache status
      service:
        name: apache2
        state: started