---
- name: Deploy Rails Application
  hosts: webservers
  become: yes
  vars:
    app_archive_path: "/tmp/{{ app_name }}-{{ build_number | default('latest') }}.tar.gz"
  
  pre_tasks:
    - name: Verify archive exists
      stat:
        path: "{{ app_archive_path }}"
      register: archive_stat
      
    - name: Fail if archive doesn't exist
      fail:
        msg: "Application archive not found at {{ app_archive_path }}"
      when: not archive_stat.stat.exists

  roles:
    - common
    - rails-app

  post_tasks:
    - name: Start Rails application
      shell: |
        cd {{ deploy_path }}/{{ rails_env }}/current
        export PATH="/home/{{ deploy_user }}/.rbenv/bin:$PATH"
        eval "$(rbenv init -)"
        rbenv rehash
        source config/.env.{{ rails_env }}
        pkill -f 'rails server' || true
        nohup bundle exec rails server -e {{ rails_env }} -p {{ rails_port }} -b 0.0.0.0 > log/rails.log 2>&1 &
      become: yes
      become_user: "{{ deploy_user }}"
      environment:
        PATH: "/home/{{ deploy_user }}/.rbenv/bin:/home/{{ deploy_user }}/.rbenv/shims:{{ ansible_env.PATH }}"
      
    - name: Wait for application to start
      wait_for:
        port: "{{ rails_port }}"
        host: "{{ ansible_host }}"
        delay: 10
        timeout: 60
      delegate_to: localhost
      
    - name: Display deployment information
      debug:
        msg: |
          ðŸŽ‰ Deployment completed successfully!
          Environment: {{ rails_env }}
          Server: {{ ansible_host }}
          Application URL: http://{{ ansible_host }}:{{ rails_port }}
          Deploy path: {{ deploy_path }}/{{ rails_env }}/current
