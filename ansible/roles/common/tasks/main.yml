---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes

- name: Install system dependencies
  apt:
    name:
      - curl
      - wget
      - git
      - build-essential
      - libssl-dev
      - libreadline-dev
      - zlib1g-dev
      - libyaml-dev
      - libxml2-dev
      - libxslt1-dev
      - libcurl4-openssl-dev
      - libffi-dev
      - postgresql
      - postgresql-contrib
      - libpq-dev
      - nginx
      - auditd
    state: present
  become: yes

- name: Start and enable services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - postgresql
    - nginx
    - auditd
  become: yes

- name: Create deployment directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
  loop:
    - "{{ deploy_path }}"
    - "{{ deploy_path }}/{{ rails_env }}"
    - "{{ deploy_path }}/{{ rails_env }}/releases"
    - "{{ deploy_path }}/{{ rails_env }}/shared"
    - "{{ deploy_path }}/{{ rails_env }}/shared/log"
    - "{{ deploy_path }}/{{ rails_env }}/shared/tmp"
    - "{{ deploy_path }}/{{ rails_env }}/shared/config"
  become: yes

- name: Setup rbenv for deploy user
  shell: |
    if [ ! -d /home/{{ deploy_user }}/.rbenv ]; then
      git clone https://github.com/rbenv/rbenv.git /home/{{ deploy_user }}/.rbenv
      git clone https://github.com/rbenv/ruby-build.git /home/{{ deploy_user }}/.rbenv/plugins/ruby-build
      echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /home/{{ deploy_user }}/.bashrc
      echo 'eval "$(rbenv init -)"' >> /home/{{ deploy_user }}/.bashrc
      chown -R {{ deploy_user }}:{{ deploy_user }} /home/{{ deploy_user }}/.rbenv
    fi
  become: yes

- name: Install Ruby and Bundler
  shell: |
    export PATH="/home/{{ deploy_user }}/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
    if ! rbenv versions | grep -q {{ ruby_version }}; then
      rbenv install {{ ruby_version }}
      rbenv global {{ ruby_version }}
      rbenv rehash
      # Install bundler
      ~/.rbenv/versions/{{ ruby_version }}/bin/gem install bundler -v {{ bundler_version }}
      rbenv rehash
    fi
  become: yes
  become_user: "{{ deploy_user }}"
  environment:
    PATH: "/home/{{ deploy_user }}/.rbenv/bin:{{ ansible_env.PATH }}"

- name: Setup PostgreSQL database
  postgresql_db:
    name: "{{ database_name }}"
    owner: "{{ database_user }}"
    state: present
  become: yes
  become_user: postgres

- name: Create PostgreSQL user
  postgresql_user:
    name: "{{ database_user }}"
    password: "{{ database_password }}"
    role_attr_flags: CREATEDB,NOSUPERUSER
    state: present
  become: yes
  become_user: postgres
