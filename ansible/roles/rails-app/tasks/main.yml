---
- name: Create release directory
  file:
    path: "{{ deploy_path }}/{{ rails_env }}/releases/{{ ansible_date_time.epoch }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
  become: yes

- name: Set release directory variable
  set_fact:
    release_dir: "{{ deploy_path }}/{{ rails_env }}/releases/{{ ansible_date_time.epoch }}"
    current_dir: "{{ deploy_path }}/{{ rails_env }}/current"

- name: Check if application archive exists
  stat:
    path: "{{ app_archive_path }}"
  register: archive_stat

- name: Extract application archive
  unarchive:
    src: "{{ app_archive_path }}"
    dest: "{{ release_dir }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
    remote_src: yes
  become: yes
  when: archive_stat.stat.exists

- name: Generate Rails secret key
  shell: ruby -e "require 'securerandom'; puts SecureRandom.hex(64)"
  register: rails_secret
  become_user: "{{ deploy_user }}"

- name: Create environment file
  template:
    src: env.j2
    dest: "{{ deploy_path }}/{{ rails_env }}/shared/config/.env.{{ rails_env }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0600'
  become: yes

- name: Create symlinks to shared directories
  file:
    src: "{{ deploy_path }}/{{ rails_env }}/shared/{{ item }}"
    dest: "{{ release_dir }}/{{ item }}"
    state: link
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: yes
  loop:
    - log
    - tmp
    - config/.env.{{ rails_env }}
  become: yes

- name: Install gems
  shell: |
    export PATH="/home/{{ deploy_user }}/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
    rbenv rehash
    cd {{ release_dir }}
    
    # Ensure bundle is available
    if ! command -v bundle &> /dev/null; then
      ~/.rbenv/versions/{{ ruby_version }}/bin/gem install bundler -v {{ bundler_version }}
      rbenv rehash
    fi
    
    bundle install --deployment --without development test
  become: yes
  become_user: "{{ deploy_user }}"
  environment:
    PATH: "/home/{{ deploy_user }}/.rbenv/bin:/home/{{ deploy_user }}/.rbenv/shims:{{ ansible_env.PATH }}"

- name: Run database migrations
  shell: |
    export PATH="/home/{{ deploy_user }}/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
    rbenv rehash
    cd {{ release_dir }}
    source config/.env.{{ rails_env }}
    bundle exec rake db:create db:migrate
  become: yes
  become_user: "{{ deploy_user }}"
  environment:
    RAILS_ENV: "{{ rails_env }}"
    PATH: "/home/{{ deploy_user }}/.rbenv/bin:/home/{{ deploy_user }}/.rbenv/shims:{{ ansible_env.PATH }}"

- name: Precompile assets
  shell: |
    export PATH="/home/{{ deploy_user }}/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
    rbenv rehash
    cd {{ release_dir }}
    source config/.env.{{ rails_env }}
    bundle exec rake assets:precompile
  become: yes
  become_user: "{{ deploy_user }}"
  environment:
    RAILS_ENV: "{{ rails_env }}"
    PATH: "/home/{{ deploy_user }}/.rbenv/bin:/home/{{ deploy_user }}/.rbenv/shims:{{ ansible_env.PATH }}"

- name: Update current symlink
  file:
    src: "{{ release_dir }}"
    dest: "{{ current_dir }}"
    state: link
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: yes
  become: yes

- name: Cleanup old releases
  shell: |
    cd {{ deploy_path }}/{{ rails_env }}/releases
    ls -t | tail -n +6 | xargs rm -rf
  become: yes
  become_user: "{{ deploy_user }}"
  ignore_errors: yes
