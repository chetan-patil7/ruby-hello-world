---
- name: Create user groups
  group:
    name: "{{ item.value.name }}"
    state: present
  loop: "{{ user_groups | dict2items }}"
  become: yes

- name: Create user with specified access level
  user:
    name: "{{ new_username }}"
    shell: /bin/bash
    groups: "{{ user_access_group }}"
    append: yes
    create_home: yes
    state: present
  become: yes
  when: new_username is defined

- name: Setup SSH directory for new user
  file:
    path: "/home/{{ new_username }}/.ssh"
    state: directory
    owner: "{{ new_username }}"
    group: "{{ new_username }}"
    mode: '0700'
  become: yes
  when: new_username is defined

- name: Copy SSH key to new user (optional)
  copy:
    src: "/home/{{ deploy_user }}/.ssh/authorized_keys"
    dest: "/home/{{ new_username }}/.ssh/authorized_keys"
    owner: "{{ new_username }}"
    group: "{{ new_username }}"
    mode: '0600'
    remote_src: yes
  become: yes
  when: new_username is defined and copy_ssh_key | default(false)

- name: Setup sudoers configuration
  template:
    src: sudoers_config.j2
    dest: /etc/sudoers.d/tiered_access
    mode: '0440'
    validate: 'visudo -cf %s'
  become: yes

- name: Display user creation summary
  debug:
    msg: |
      User '{{ new_username }}' created successfully!
      Access Level: {{ user_access_level }}
      Group: {{ user_access_group }}
      SSH Access: {{ 'Enabled' if copy_ssh_key | default(false) else 'Disabled' }}
  when: new_username is defined
